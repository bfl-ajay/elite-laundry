services:
  # PostgreSQL Database for Development
  database:
    image: postgres:15-alpine
    container_name: laundry-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-laundry_management}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/config/schema-v2.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - laundry-dev-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-laundry_management}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API for Development
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: development
    container_name: laundry-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-laundry_management}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_SSL: "false"
      SESSION_SECRET: ${SESSION_SECRET:-dev-session-secret}
      PORT: 5000
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      LOG_LEVEL: debug
      TRUST_PROXY: "false"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - uploads_dev_data:/app/uploads
    networks:
      - laundry-dev-network
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    command: npm run dev

  # Frontend for Development
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: development
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:3001/api}
    container_name: laundry-frontend-dev
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001/api}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - laundry-dev-network
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm run dev

networks:
  laundry-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16

volumes:
  postgres_dev_data:
    driver: local
  uploads_dev_data:
    driver: local